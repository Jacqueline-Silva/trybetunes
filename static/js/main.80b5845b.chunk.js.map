{"version":3,"sources":["services/musicsAPI.js","pages/Loading.js","services/favoriteSongsAPI.js","components/MusicCard.js","services/userAPI.js","components/Header.js","pages/Album.js","pages/Favorites.js","pages/Login.js","components/CardsOfAlbum.js","services/searchAlbumsAPI.js","pages/Search.js","pages/Profile.js","pages/ProfileEdit.js","pages/NotFound.js","App.js","index.js"],"names":["getMusics","id","a","fetch","request","json","requestJson","results","Loading","className","Component","FAVORITE_SONGS_KEY","JSON","parse","localStorage","getItem","setItem","stringify","readFavoriteSongs","saveFavoriteSongs","favoriteSongs","simulateRequest","response","callback","setTimeout","getFavoriteSongs","Promise","resolve","addSong","song","removeSong","filter","s","trackId","MusicCard","state","loading","favorite","getListFavorite","bind","handleFavorite","this","target","music","props","setState","checked","favs","some","e","trackName","previewUrl","src","controls","kind","htmlFor","type","name","onChange","USER_KEY","saveUser","user","getUser","createUser","email","image","description","updateUser","updatedUser","Header","nameInput","handleProfile","result","to","exact","activeClassName","Album","listSongs","nameArtist","requestListAlbum","match","params","listAlbum","artistName","collection","collectionName","artworkUrl60","alt","width","map","Favorites","favoritesSongs","getFavorites","nextProps","nextState","favorites","Login","inputChange","handleClick","redirect","placeholder","disabled","length","onClick","CardsOfAlbum","album","resultArtist","artworkUrl100","artistId","collectionId","collectionPrice","searchAlbumsAPI","artist","artistNameURL","encodeURI","replaceAll","getAlbumsAPI","APIResponse","releaseDate","trackCount","Search","value","Profile","dadosProfile","getProfile","dados","redirectEdit","ProfileEdit","userProfile","iptName","iptEmail","iptDescription","iptImage","removeValue","verifyDisabled","handleChange","updateProfile","getUserProfile","responseUser","profileAtt","NotFound","App","path","render","component","React","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80b5845b.chunk.js","sourcesContent":["const getMusics = async (id) => {\n  const request = await fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`);\n  const requestJson = await request.json();\n  return requestJson.results;\n};\n\nexport default getMusics;\n","import React, { Component } from 'react';\n\nclass Loading extends Component {\n  render() {\n    return (\n      <div className=\"loading\">\n        Carregando...\n      </div>\n    );\n  }\n}\n\nexport default Loading;\n","const FAVORITE_SONGS_KEY = 'favorite_songs';\nconst TIMEOUT = 500;\nconst SUCCESS_STATUS = 'OK';\n\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n}\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\n\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso futuramente.\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getFavoriteSongs = () => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  simulateRequest(favoriteSongs)(resolve);\n});\n\nexport const addSong = (song) => new Promise((resolve) => {\n  if (song) {\n    const favoriteSongs = readFavoriteSongs();\n    saveFavoriteSongs([...favoriteSongs, song]);\n  }\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const removeSong = (song) => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Loading from '../pages/Loading';\nimport { addSong, getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\n\nclass MusicCard extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      loading: false,\n      favorite: false,\n    };\n\n    this.getListFavorite = this.getListFavorite.bind(this);\n    this.handleFavorite = this.handleFavorite.bind(this);\n  }\n\n  componentDidMount() {\n    this.getListFavorite();\n  }\n\n  async handleFavorite({ target }) {\n    const { music } = this.props;\n    this.setState({\n      loading: true,\n      favorite: target.checked,\n    });\n\n    if (!target.checked) {\n      await removeSong(music);\n    } else {\n      await addSong(music);\n    }\n\n    this.setState({\n      loading: false,\n    });\n  }\n\n  async getListFavorite() {\n    const { trackId } = this.props;\n    this.setState({\n      loading: true,\n    });\n\n    const favs = await getFavoriteSongs();\n\n    this.setState({\n      loading: false,\n      favorite: favs.some((e) => e.trackId === trackId),\n    });\n  }\n\n  render() {\n    const { trackName, previewUrl, trackId } = this.props;\n    const { loading, favorite } = this.state;\n\n    return (\n      <div className=\"song\">\n        {\n          loading\n            ? <Loading />\n            : (\n              <>\n                <p>{ trackName }</p>\n                <audio\n                  data-testid=\"audio-component\"\n                  src={ previewUrl }\n                  controls\n                >\n                  <track kind=\"captions\" />\n                  O seu navegador não suporta o elemento\n                  <code>audio</code>\n                </audio>\n                <label htmlFor=\"favorita\">\n                  Favorita\n                  <input\n                    type=\"checkbox\"\n                    name=\"favorita\"\n                    checked={ favorite }\n                    data-testid={ `checkbox-music-${trackId}` }\n                    onChange={ this.handleFavorite }\n                  />\n                </label>\n              </>\n            )\n        }\n      </div>\n    );\n  }\n}\n\nMusicCard.propTypes = {\n  trackId: PropTypes.number.isRequired,\n  trackName: PropTypes.string.isRequired,\n  previewUrl: PropTypes.string.isRequired,\n  music: PropTypes.shape({\n    artistId: PropTypes.number,\n    wrapperType: PropTypes.string,\n  }).isRequired,\n};\n\n/* REF: https://pt-br.reactjs.org/docs/typechecking-with-proptypes.html#gatsby-focus-wrapper */\n\nexport default MusicCard;\n","const USER_KEY = 'user';\nconst TIMEOUT = 1500;\nconst SUCCESS_STATUS = 'OK';\n\nconst readUser = () => JSON.parse(localStorage.getItem(USER_KEY));\nconst saveUser = (user) => localStorage.setItem(USER_KEY, JSON.stringify(user));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getUser = () => new Promise((resolve) => {\n  let user = readUser();\n  if (user === null) {\n    user = {};\n  }\n  simulateRequest(user)(resolve);\n});\n\nexport const createUser = (user) => new Promise((resolve) => {\n  const emptyUser = {\n    name: '',\n    email: '',\n    image: '',\n    description: '',\n  };\n  saveUser({ ...emptyUser, ...user });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const updateUser = (updatedUser) => new Promise((resolve) => {\n  saveUser({ ...updatedUser });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React, { Component } from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport { getUser } from '../services/userAPI';\nimport Loading from '../pages/Loading';\n\nclass Header extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      loading: false,\n      nameInput: '',\n    };\n\n    this.handleProfile = this.handleProfile.bind(this);\n  }\n\n  componentDidMount() {\n    this.handleProfile();\n  }\n\n  async handleProfile() {\n    this.setState({\n      loading: true,\n    });\n    const result = await getUser();\n    this.setState({\n      nameInput: result.name,\n      loading: false,\n    });\n  }\n\n  render() {\n    const { nameInput, loading } = this.state;\n\n    return (\n      <header data-testid=\"header-component\">\n        <div\n          data-testid=\"header-user-name\"\n          className=\"title-profile\"\n        >\n          <h1>\n            <Link to=\"/trybetunes/\" exact className=\"link-header\"> TrybeTunes </Link>\n          </h1>\n          <h3>\n            {\n              loading ? <Loading /> : nameInput\n            }\n          </h3>\n        </div>\n        <nav>\n          <NavLink\n            to=\"/trybetunes/search\"\n            data-testid=\"link-to-search\"\n            activeClassName=\"active\"\n          >\n            Search\n          </NavLink>\n\n          <NavLink to=\"/trybetunes/album/:id\"> </NavLink>\n\n          <NavLink\n            to=\"/trybetunes/favorites\"\n            data-testid=\"link-to-favorites\"\n            activeClassName=\"active\"\n          >\n            Favorites\n          </NavLink>\n\n          <NavLink to=\"/trybetunes/profile/edit\"> </NavLink>\n\n          <NavLink\n            to=\"/trybetunes/profile\"\n            data-testid=\"link-to-profile\"\n            activeClassName=\"active\"\n            exact\n          >\n            Profile\n          </NavLink>\n        </nav>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport getMusics from '../services/musicsAPI';\nimport Loading from './Loading';\nimport MusicCard from '../components/MusicCard';\nimport Header from '../components/Header';\n\nclass Album extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      loading: false,\n      listSongs: [],\n      nameArtist: '',\n    };\n\n    this.requestListAlbum = this.requestListAlbum.bind(this);\n  }\n\n  componentDidMount() {\n    this.requestListAlbum();\n  }\n\n  async requestListAlbum() {\n    const { match } = this.props;\n    const { params: { id } } = match;\n\n    this.setState({\n      loading: true,\n    });\n\n    const listAlbum = await getMusics(id);\n\n    this.setState({\n      loading: false,\n      listSongs: listAlbum,\n      nameArtist: listAlbum[0].artistName,\n      collection: listAlbum[0].collectionName,\n      image: listAlbum[0].artworkUrl60,\n    });\n  }\n\n  render() {\n    const { listSongs, loading, nameArtist, collection, image } = this.state;\n\n    return (\n      <div data-testid=\"page-album\">\n        <Header />\n        { loading\n          ? <Loading />\n          : (\n            <div className=\"album\">\n              <h3>Lista de músicas do Album</h3>\n              <div data-testid=\"artist-name\" className=\"album--artist-name\">\n                { nameArtist }\n              </div>\n              <div data-testid=\"album-name\" className=\"list\">\n                <div className=\"cardAlbumList\">\n                  <p>\n                    Artista:\n                    { nameArtist }\n                  </p>\n                  <p>\n                    Album:\n                    { collection }\n                  </p>\n                  <br />\n                  <img src={ image } alt={ collection } width=\"200px\" />\n                </div>\n                <div className=\"cardList\">\n                  {listSongs\n                    .filter(({ trackName }) => trackName)\n                    .map((music) => (\n                      <div className=\"cardSong\" key={ music.trackName }>\n                        <MusicCard\n                          music={ music }\n                          trackId={ music.trackId }\n                          trackName={ music.trackName }\n                          previewUrl={ music.previewUrl }\n                        />\n                      </div>\n                    ))}\n                </div>\n              </div>\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.string.isRequired,\n};\n\nexport default Album;\n","import React, { Component } from 'react';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport Loading from './Loading';\n\nclass Favorites extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      loading: false,\n      favoritesSongs: [],\n    };\n\n    this.getFavorites = this.getFavorites.bind(this);\n  }\n\n  componentDidMount() {\n    this.getFavorites();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const { favoritesSongs } = this.state;\n    if (nextState.favoritesSongs !== favoritesSongs) {\n      return true;\n    }\n  }\n\n  componentDidUpdate() {\n    this.getFavorites();\n  }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   const { favoritesSongs } = this.state;\n  //   if (favoritesSongs !== prevState.favoritesSongs) {\n  //     getFavoriteSongs().then((response) => {\n  //       this.setState({ favoritesSongs: response });\n  //     });\n  //   }\n  // }\n\n  async getFavorites() {\n    this.setState({\n      loading: true,\n    });\n\n    const favorites = await getFavoriteSongs();\n\n    this.setState({\n      loading: false,\n      favoritesSongs: favorites,\n    });\n  }\n\n  render() {\n    const { loading, favoritesSongs } = this.state;\n\n    return (\n      <div data-testid=\"page-favorites\">\n        <Header />\n        <div className=\"favorite\">\n          <h3>Favorites</h3>\n          { loading && <Loading /> }\n          <div className=\"favorite--center\">\n            {favoritesSongs\n              .filter(({ trackName }) => trackName)\n              .map((music) => (\n                <div className=\"cardSong\" key={ music.trackName }>\n                  <MusicCard\n                    music={ music }\n                    trackId={ music.trackId }\n                    trackName={ music.trackName }\n                    previewUrl={ music.previewUrl }\n                  />\n                </div>\n              ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Favorites;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min';\nimport PropTypes from 'prop-types';\n\nclass Login extends Component {\n  render() {\n    const { inputChange, nameInput, handleClick, redirect } = this.props;\n    const min = 3;\n\n    return (\n      <div data-testid=\"page-login\" className=\"login\">\n        <h2>Login</h2>\n        <div className=\"login--input\">\n          <label htmlFor=\"nameInput\">\n            <input\n              type=\"text\"\n              data-testid=\"login-name-input\"\n              name=\"nameInput\"\n              placeholder=\"Digite seu nome\"\n              onChange={ inputChange }\n            />\n          </label>\n\n          <button\n            type=\"submit\"\n            data-testid=\"login-submit-button\"\n            disabled={ nameInput.length < min }\n            onClick={ handleClick }\n          >\n            Entrar\n          </button>\n          {\n            redirect && <Redirect to=\"/trybetunes/search\" />\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  nameInput: PropTypes.string.isRequired,\n  inputChange: PropTypes.func.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  redirect: PropTypes.bool.isRequired,\n};\n\nexport default Login;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass CardsOfAlbum extends Component {\n  render() {\n    const { album, resultArtist } = this.props;\n    return (\n      (\n        <>\n          <div className=\"resultAlbum\">\n            <p>\n              { `Resultado de álbuns de: ${resultArtist}` }\n            </p>\n          </div>\n          <div className=\"cardAlbum\">\n            {\n              album.map(({\n                artistName,\n                artworkUrl100,\n                artistId,\n                collectionName,\n                collectionId,\n                collectionPrice,\n              }) => (\n                <Link\n                  to={ `/trybetunes/album/${collectionId}` }\n                  key={ artistId }\n                  data-testid={ `link-to-album-${collectionId}` }\n                >\n                  <div className=\"minCardAlbum\">\n                    <p>\n                      <strong>Artista:</strong>\n                      {' '}\n                      { artistName }\n                    </p>\n                    <p>\n                      <strong>Album:</strong>\n                      {' '}\n                      { collectionName }\n                    </p>\n                    <img src={ artworkUrl100 } alt={ collectionName } />\n                    <p>\n                      <em>\n                        Preço: U$\n                        {' '}\n                        { collectionPrice }\n                      </em>\n                    </p>\n                    <br />\n                  </div>\n                </Link>\n              ))\n            }\n          </div>\n        </>\n      )\n    );\n  }\n}\n\nCardsOfAlbum.propTypes = {\n  album: PropTypes.arrayOf(PropTypes.object).isRequired,\n  resultArtist: PropTypes.string.isRequired,\n};\n\nexport default CardsOfAlbum;\n","const searchAlbumsAPI = async (artist) => {\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\n\n  const getAlbumsAPI = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\n\n  const APIResponse = await fetch(getAlbumsAPI);\n\n  const { results } = await APIResponse.json();\n\n  const response = results.map(\n    ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }) => ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }),\n  );\n  return response;\n};\n\nexport default searchAlbumsAPI;\n","import React, { Component } from 'react';\nimport CardsOfAlbum from '../components/CardsOfAlbum';\nimport Header from '../components/Header';\nimport searchAlbumsAPI from '../services/searchAlbumsAPI';\nimport Loading from './Loading';\n\nclass Search extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      nameArtist: '',\n      loading: false,\n      resultArtist: '',\n      album: [],\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.inputChange = this.inputChange.bind(this);\n  }\n\n  async handleClick() {\n    const { nameArtist } = this.state;\n    this.setState({\n      loading: true,\n    });\n\n    const result = await searchAlbumsAPI(nameArtist);\n\n    this.setState({\n      resultArtist: nameArtist,\n      loading: false,\n      nameArtist: '',\n      album: result,\n    });\n  }\n\n  inputChange({ target }) {\n    this.setState({\n      [target.name]: target.value,\n    });\n  }\n\n  render() {\n    const { nameArtist, loading, album, resultArtist } = this.state;\n    const min = 2;\n\n    return (\n      <div data-testid=\"page-search\">\n        <Header />\n        { loading\n          ? <Loading />\n          : (\n            <div className=\"search\">\n              <h3>Search</h3>\n              <div className=\"search--input\">\n                <label htmlFor=\"searchArtist\">\n                  <input\n                    name=\"nameArtist\"\n                    placeholder=\"Artista / Banda\"\n                    data-testid=\"search-artist-input\"\n                    value={ nameArtist }\n                    onChange={ this.inputChange }\n                  />\n                </label>\n                <button\n                  type=\"submit\"\n                  data-testid=\"search-artist-button\"\n                  disabled={ nameArtist.length < min }\n                  onClick={ this.handleClick }\n                >\n                  Pesquisar\n                </button>\n              </div>\n              { album.length > 0\n                ? <CardsOfAlbum album={ album } resultArtist={ resultArtist } />\n                : <p className=\"notAlbum\"> Nenhum álbum foi encontrado</p> }\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Header from '../components/Header';\nimport { getUser } from '../services/userAPI';\nimport Loading from './Loading';\n\nclass Profile extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      loading: false,\n      dadosProfile: {},\n    };\n\n    this.getProfile = this.getProfile.bind(this);\n    this.redirect = this.redirect.bind(this);\n  }\n\n  componentDidMount() {\n    this.getProfile();\n  }\n\n  async getProfile() {\n    this.setState({\n      loading: true,\n    });\n\n    const dados = await getUser();\n\n    this.setState({\n      loading: false,\n      dadosProfile: dados,\n      redirectEdit: false,\n    });\n  }\n\n  redirect() {\n    this.setState({\n      redirectEdit: true,\n    });\n  }\n\n  render() {\n    const { dadosProfile, loading, redirectEdit } = this.state;\n    const { name, email, description, image } = dadosProfile;\n\n    return (\n      <div data-testid=\"page-profile\">\n        <Header />\n        <div className=\"profile\">\n          <h3>Profile</h3>\n          <div>\n            {\n              loading\n                ? <Loading />\n                : (\n                  <div key={ name } className=\"dadosProfile\">\n                    <img\n                      src={ image === '' ? 'https://flyclipart.com/thumb2/profile-icon-png-black-196391.png' : image }\n                      alt={ name }\n                      data-testid=\"profile-image\"\n                      width=\"180px\"\n                    />\n                    <h4>Nome: </h4>\n                    <p>\n                      { name }\n                    </p>\n                    <h4>Email: </h4>\n                    <p>\n                      { email }\n                    </p>\n                    <h4>Descrição: </h4>\n                    <p>\n                      { description }\n                    </p>\n                    <button\n                      type=\"button\"\n                      onClick={ this.redirect }\n                    >\n                      Editar perfil\n                    </button>\n                    {\n                      redirectEdit && <Redirect to=\"/trybetunes/profile/edit\" />\n                    }\n                  </div>\n                )\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { getUser, updateUser } from '../services/userAPI';\nimport Header from '../components/Header';\nimport Loading from './Loading';\n\nclass ProfileEdit extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      loading: false,\n      userProfile: {},\n      redirect: false,\n      iptName: '',\n      iptEmail: '',\n      iptDescription: '',\n      iptImage: '',\n    };\n\n    this.removeValue = this.removeValue.bind(this);\n    this.verifyDisabled = this.verifyDisabled.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.updateProfile = this.updateProfile.bind(this);\n    this.getUserProfile = this.getUserProfile.bind(this);\n  }\n\n  componentDidMount() {\n    this.getUserProfile();\n  }\n\n  handleChange({ target }) {\n    this.setState({\n      [target.name]: target.value,\n    });\n  }\n\n  async getUserProfile() {\n    this.setState({\n      loading: true,\n    });\n\n    const responseUser = await getUser();\n\n    this.setState({\n      loading: false,\n      userProfile: responseUser,\n      iptName: responseUser.name,\n      iptEmail: responseUser.email,\n      iptDescription: responseUser.description,\n      iptImage: responseUser.image,\n    });\n  }\n\n  removeValue({ target }) {\n    target.value = '';\n  }\n\n  async updateProfile() {\n    const { iptName, iptEmail, iptDescription, iptImage } = this.state;\n\n    this.setState({\n      loading: true,\n    });\n\n    const profileAtt = {\n      name: iptName,\n      email: iptEmail,\n      image: iptImage,\n      description: iptDescription,\n    };\n\n    await updateUser(profileAtt);\n\n    this.setState({\n      loading: false,\n      redirect: true,\n    });\n  }\n\n  verifyDisabled() {\n    const { iptName, iptEmail, iptDescription, iptImage } = this.state;\n    if (iptName === '' || undefined) {\n      return true;\n    }\n    if (iptEmail === '' || undefined) {\n      return true;\n    }\n    if (iptDescription === '' || undefined) {\n      return true;\n    }\n    if (iptImage === '' || undefined) {\n      return true;\n    }\n  }\n\n  render() {\n    const {\n      loading,\n      userProfile,\n      redirect,\n      iptName,\n      iptEmail,\n      iptDescription,\n      iptImage } = this.state;\n\n    return (\n      <div data-testid=\"page-profile-edit\">\n        <Header />\n        <div className=\"profileEdit\">\n          <h3>ProfileEdit</h3>\n          {\n            loading\n              ? <Loading />\n              : (\n                <div className=\"profileEdit--info-forms\">\n                  <div key={ userProfile.name } className=\"dadosProfileEdit\">\n                    <img\n                      src={ userProfile.image === '' ? 'https://flyclipart.com/thumb2/profile-icon-png-black-196391.png' : userProfile.image }\n                      alt={ userProfile.name }\n                      data-testid=\"profile-image\"\n                      width=\"180px\"\n                    />\n                    <h4>Nome: </h4>\n                    <p>\n                      { userProfile.name }\n                    </p>\n                    <h4>Email: </h4>\n                    <p>\n                      { userProfile.email }\n                    </p>\n                    <h4>Descrição: </h4>\n                    <p>\n                      { userProfile.description }\n                    </p>\n                  </div>\n                  <div className=\"profileEdit--forms\">\n                    <h3>Edite suas informações</h3>\n                    <form className=\"dadosProfileEdit2\">\n                      <label htmlFor=\"iptName\">\n                        Nome:\n                        <input\n                          type=\"text\"\n                          name=\"iptName\"\n                          data-testid=\"edit-input-name\"\n                          value={ iptName }\n                          onChange={ this.handleChange }\n                          onClick={ this.removeValue }\n                        />\n                      </label>\n                      <label htmlFor=\"iptEmail\">\n                        Email:\n                        <input\n                          type=\"email\"\n                          name=\"iptEmail\"\n                          data-testid=\"edit-input-email\"\n                          value={ iptEmail }\n                          onChange={ this.handleChange }\n                          onClick={ this.removeValue }\n                        />\n                      </label>\n                      <label htmlFor=\"iptDescription\">\n                        Descrição:\n                        <input\n                          type=\"text\"\n                          name=\"iptDescription\"\n                          data-testid=\"edit-input-description\"\n                          value={ iptDescription }\n                          onChange={ this.handleChange }\n                          onClick={ this.removeValue }\n                        />\n                      </label>\n                      <label htmlFor=\"iptImage\">\n                        Foto de perfil:\n                        <input\n                          type=\"text\"\n                          name=\"iptImage\"\n                          data-testid=\"edit-input-image\"\n                          value={ iptImage }\n                          onChange={ this.handleChange }\n                          onClick={ this.removeValue }\n                        />\n                      </label>\n\n                      <button\n                        type=\"button\"\n                        data-testid=\"edit-button-save\"\n                        disabled={ this.verifyDisabled() }\n                        onClick={ this.updateProfile }\n                      >\n                        Salvar Alterações\n                      </button>\n                    </form>\n                    {\n                      redirect && <Redirect to=\"/trybetunes/profile\" />\n                    }\n                  </div>\n                </div>\n              )\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProfileEdit;\n","import React, { Component } from 'react';\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <div data-testid=\"page-not-found\" className=\"notFound\">\n        <h3>NotFound</h3>\n      </div>\n    );\n  }\n}\n\nexport default NotFound;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Album from './pages/Album';\nimport Favorites from './pages/Favorites';\nimport Login from './pages/Login';\nimport Search from './pages/Search';\nimport Profile from './pages/Profile';\nimport ProfileEdit from './pages/ProfileEdit';\nimport NotFound from './pages/NotFound';\nimport Loading from './pages/Loading';\nimport { createUser } from './services/userAPI';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      nameInput: '',\n      loading: false,\n      redirect: false,\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.inputChange = this.inputChange.bind(this);\n  }\n\n  async handleClick() {\n    const { nameInput } = this.state;\n    this.setState({\n      loading: true,\n    });\n\n    await createUser({ name: nameInput });\n\n    this.setState({\n      loading: false,\n      redirect: true,\n    });\n  }\n\n  inputChange({ target }) {\n    this.setState({\n      [target.name]: target.value,\n    });\n  }\n\n  render() {\n    const { nameInput, loading, redirect } = this.state;\n\n    return (\n      <>\n        {\n          loading && <Loading />\n        }\n        <Switch>\n          <Route exact path=\"/trybetunes/\">\n            <Login\n              inputChange={ this.inputChange }\n              nameInput={ nameInput }\n              handleClick={ this.handleClick }\n              redirect={ redirect }\n            />\n          </Route>\n\n          <Route\n            exact\n            path=\"/trybetunes/album/:id\"\n            render={\n              (props) => <Album { ...props } />\n            }\n          />\n\n          <Route exact path=\"/trybetunes/search\" component={ Search } />\n          <Route exact path=\"/trybetunes/favorites\" component={ Favorites } />\n          <Route exact path=\"/trybetunes/profile\" component={ Profile } />\n          <Route exact path=\"/trybetunes/profile/edit\" component={ ProfileEdit } />\n          <Route path=\"*\" component={ NotFound } />\n        </Switch>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom/cjs/react-router-dom.min';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}